name: "Check Version Update"

on:
    workflow_dispatch:
    schedule:
        - cron: '0 23 * * *'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Setup ssh agent
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Check for an update
        run: |
          git config --global user.email "rkerry1@gmail.com"
          git config --global user.name "ryank90"
          DOCKER_TAG=$(grep 'ENV HUGO_VERSION=' Dockerfile | cut -d '=' -f 2)
          LATEST_TAG=$(curl -m 10 --retry 5 --silent "https://api.github.com/repos/gohugoio/hugo/releases" | jq -r '.[0].tag_name' | cut -d 'v' -f 2)
          if [ "$DOCKER_TAG" = "$LATEST_TAG" ]; then 
            echo "Latest tag is same => $DOCKER_TAG" 
            exit 0
          fi
          sed -i.bak "s/ENV HUGO_VERSION=$DOCKER_TAG/ENV HUGO_VERSION=$LATEST_TAG/" Dockerfile
          rm Dockerfile.bak
          git add Dockerfile && git commit -m "Update hugo to v$LATEST_TAG"
          git tag -a "v$LATEST_TAG" -m "v$LATEST_TAG"
          git push && git push --tags
          echo "NEW_TAG=v$LATEST_TAG" >> $GITHUB_ENV

      - name: Check if release exists
        if: env.NEW_TAG != ''
        id: check_release
        run: |
          RELEASE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ env.NEW_TAG }}")
          if [ "$RELEASE_EXISTS" = "200" ]; then
            echo "Release already exists for ${{ env.NEW_TAG }}"
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "No existing release found for ${{ env.NEW_TAG }}"
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create Release
        if: env.NEW_TAG != '' && env.RELEASE_EXISTS == 'false'
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.NEW_TAG }}
          tag_name: ${{ env.NEW_TAG }}
          body: |
            Hugo Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}